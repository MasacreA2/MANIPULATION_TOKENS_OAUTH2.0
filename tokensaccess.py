import requests
from colorama import Fore, Style, init
# Validador de  tokens  Oauth 2.0  para aplicaciones de Googl3

init(autoreset=True)


banner = f"""
{Fore.CYAN}=================================================================================================================
{Fore.MAGENTA}
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†â‚†â‚†â‚†õ‚†õ‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†â‚†â‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°Ñ‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£Ä‚°Ä‚†Ä‚†Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ª‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚†ø‚†õ‚¢â‚£†‚£â‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†â‚†Ä‚£æ‚°∑‚†Ç‚¢§‚£ç‚†õ‚†ø‚£ø‚£ø‚£ø‚†ø‚¢ø‚£ø‚£∑‚£ß‚°Ç‚†Ä‚†Ä‚¢†‚£Ü‚£¥‚£∑‚†ø‚†Ä‚†Ä‚†Ä‚†õ‚†ã‚£°‚£∂‚°Ü‚†Ä‚†ô‚£ø‚†Ä‚†Ä‚¢®‚°ô‚†ª‚¢ø‚£ø‚£ø
‚£ø‚°ø‚†õ‚†Å‚†∞‚°Ü‚†Ä‚¢†‚£ø‚†Ä‚†Ä‚£∏‚°ø‚†Å‚†∞‚£∂‚°∂‚†Ç‚¢†‚°à‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ã‚£†‚†Ç‚†Ä‚¢†‚£ø‚†Ä‚†Ä‚¢ª‚£∑‚°Ä‚†Ä‚£ø‚£¶‚°Ä‚†à‚°á‚†Ä‚††‚£ç‚†õ
‚†ã‚¢°‚°Ñ‚†Ä‚¢Ä‚†Å‚£†‚£æ‚£ø‚†Ä‚£∞‚£ø‚°á‚†Ä‚¢Ä‚£ø‚°á‚†Ä‚†∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚†Ä‚†Ä‚¢∏‚£ø‚°Ñ‚†Ä‚¢∏‚£ø‚£∑‚°Ä‚£ø‚£ø‚£∑‚£Ñ‚¢£‚°Ä‚†Ä‚†ü‚†Ä
‚†Ä‚¢∏‚†Ä‚£∞‚£ø‚£æ‚£ø‚£ø‚£ø‚£∞‚£ø‚£ø‚°á‚¢Ä‚£æ‚£ø‚°á‚†Ä‚°§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¶‚†Ä‚¢∏‚£ø‚£ø‚°Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£∏‚£Ñ
‚£¥‚£Ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚£æ‚£ø‚£ø‚°á‚£∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢æ‚£Ü‚£æ‚£ø‚£ø‚£ø‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†á‚†Ä‚¢Ä‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†π‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚¢ø‚†ø‚†∑‚†Ñ‚†õ‚¢ø‚°ø‚†ü‚†Å‚†Ä‚†Ä‚¢Ä‚£æ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£¶‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢ø‚°ø‚†ã‚†∞‚†ø‚†ø‚†ü‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£∂‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£§‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø

.d88b.    db    8    8 88888 8   8 d88b   .d88b.    .d88b 8   8 8888 .d88b 8  dP    8    8888P 8    
8P  Y8   dPYb   8    8   8   8www8 " dP   8P  Y8    8P    8www8 8www 8P    8wdP     8      dP  8    
8b  d8  dPwwYb  8b..d8   8   8   8  dP    8b  d8    8b    8   8 8    8b    88Yb     8     dP   8    
`Y88P' dP    Yb `Y88P'   8   8   8 d888 w `Y88P'    `Y88P 8   8 8888 `Y88P 8  Yb    8888 d8888 8888 
                                                                                                        
                                                                                                            
{Fore.GREEN}ùîπùï™ : ùî∏ùïùùïñùï©ùïöùï§ ùïÉùï´ùïÉ = ùïÑùïíùï§ùïíùïîùï£ùïñùî∏ùüö
{Fore.CYAN}===================================================================================================================
"""
print(banner)


# Obtener la direcci√≥n IP del usuario
ip_response = requests.get('https://httpbin.org/ip')
ip_data = ip_response.json()
user_ip = ip_data.get('origin', 'N/A')

# Solicitar el token al usuario
access_token = input("Por favor ingrese su token de acceso: ")

# URL de la API para obtener informaci√≥n del usuario
api_url = "https://people.googleapis.com/v1/people/me?personFields=names,emailAddresses,photos,locales,phoneNumbers,birthdays"

# Encabezados de la solicitud
headers = {
    "Authorization": f"Bearer {access_token}",
}

# Realizar la solicitud para obtener informaci√≥n del usuario
response = requests.get(api_url, headers=headers)

# Manejar la respuesta
if response.status_code == 200:
    user_info = response.json()
    print(Fore.GREEN + Style.BRIGHT + "Informaci√≥n del usuario:")
    print(Fore.YELLOW + f"Usuario: {user_info.get('names', [{}])[0].get('displayName', 'N/A')}")
    print(Fore.YELLOW + f"Nombre: {user_info.get('names', [{}])[0].get('givenName', 'N/A')}")
    print(Fore.YELLOW + f"Apellido: {user_info.get('names', [{}])[0].get('familyName', 'N/A')}")
    print(Fore.YELLOW + f"Email: {user_info.get('emailAddresses', [{}])[0].get('value', 'N/A')}")
    print(Fore.YELLOW + f"Fecha de nacimiento: {user_info.get('birthdays', [{}])[0].get('date', 'N/A')}")
    print(Fore.YELLOW + f"Imagen: {user_info.get('photos', [{}])[0].get('url', 'N/A')}")
    print(Fore.GREEN + Style.BRIGHT + "Informaci√≥n de la direcci√≥n IP:")
    print(Fore.YELLOW + f"Direcci√≥n IP: {user_ip}")
    
    # Obtener informaci√≥n del pa√≠s asociado a la direcci√≥n IP
    ipinfo_response = requests.get(f"https://ipinfo.io/{user_ip}/json")
    if ipinfo_response.status_code == 200:
        ipinfo_data = ipinfo_response.json()
        country = ipinfo_data.get('country', 'N/A')
        latitude = ipinfo_data.get('loc', 'N/A').split(',')[0]
        longitude = ipinfo_data.get('loc', 'N/A').split(',')[1]
        print(Fore.YELLOW + f"Pa√≠s de la direcci√≥n IP: {country}")
        print(Fore.YELLOW + f"Latitud: {latitude}")
        print(Fore.YELLOW + f"Longitud: {longitude}")
    else:
        print(Fore.RED + "No se pudo obtener informaci√≥n del pa√≠s.")
else:
    print(Fore.RED + Style.BRIGHT + f"No se pudo obtener la informaci√≥n del usuario: {response.status_code}, {response.text}")